extend type Event {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Event", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Event`.`organizer`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  organizerId: UUID @fdc_generated(from: "Event.organizer", purpose: IMPLICIT_REF_FIELD)
}
extend type EventResource {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "EventResource", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `EventResource`.`event`. It must match the value of `Event`.`id`. See `@ref` for how to customize it.
  """
  eventId: UUID @fdc_generated(from: "EventResource.event", purpose: IMPLICIT_REF_FIELD)
}
extend type Feedback {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Feedback", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Feedback`.`event`. It must match the value of `Event`.`id`. See `@ref` for how to customize it.
  """
  eventId: UUID @fdc_generated(from: "Feedback.event", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Feedback`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID @fdc_generated(from: "Feedback.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Registration {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Registration", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Registration`.`event`. It must match the value of `Event`.`id`. See `@ref` for how to customize it.
  """
  eventId: UUID @fdc_generated(from: "Registration.event", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Registration`.`ticketType`. It must match the value of `TicketType`.`id`. See `@ref` for how to customize it.
  """
  ticketTypeId: UUID @fdc_generated(from: "Registration.ticketType", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Registration`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID @fdc_generated(from: "Registration.user", purpose: IMPLICIT_REF_FIELD)
}
extend type TicketType {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "TicketType", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `TicketType`.`event`. It must match the value of `Event`.`id`. See `@ref` for how to customize it.
  """
  eventId: UUID @fdc_generated(from: "TicketType.event", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
}

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Simplified helper functions to avoid circular dependencies
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow any authenticated user to read user profiles
      allow read: if isAuthenticated();
      // A user can create their own profile document
      allow create: if isOwner(userId);
      // A user can update their own profile document
      allow update: if isOwner(userId);
      // Allow authenticated users to delete (will be controlled by app logic)
      allow delete: if isAuthenticated();
    }

    match /events/{eventId} {
      // Allow authenticated users to read events
      allow read: if isAuthenticated();
      // Allow authenticated users to create events
      allow create: if isAuthenticated();
      // Allow authenticated users to update events
      allow update: if isAuthenticated();
      // Allow authenticated users to delete events
      allow delete: if isAuthenticated();
    }

    match /ticketTypes/{ticketTypeId} {
      allow read, write: if isAuthenticated();
    }

    match /registrations/{registrationId} {
      allow read, write: if isAuthenticated();
    }

    match /eventResources/{resourceId} {
      allow read, write: if isAuthenticated();
    }

    match /feedback/{feedbackId} {
      allow read, write: if isAuthenticated();
    }

    match /attendance/{attendanceId} {
      allow read, write: if isAuthenticated();
    }

    match /students/{studentId} {
      allow read, write: if isAuthenticated();
    }

    // Allow access to any other collections that might be needed
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}
